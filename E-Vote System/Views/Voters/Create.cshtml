@model E_Vote_System.Models.ViewModels.VoterModelViewModel



@{
    ViewBag.Title = "New Voter";
    ViewBag.PageTitle = "New Voter";
    ViewBag.PageSubTitle = "Register a new voter";

    SelectList voterCategories = ViewBag.VoterCategoryId as SelectList;
}


@section BreadCrumbs{

    <li class="breadcrumb-item">
        @Html.ActionLink("Dashboard", "Dashboard", "Home")
    </li>
    <li class="breadcrumb-item">
        @Html.ActionLink("Voters List", "Index", "Voters")
    </li>
    <li class="breadcrumb-item">
        <a href="#">@ViewBag.Title</a>
    </li>
}


<div class="card">
    <div class="card-header">
        <h5>@ViewBag.Title</h5>

        <span>Election form</span>
    </div>
    <div class="card-block table-border-style">

        @using (Html.BeginForm("Create", "Voters", FormMethod.Post, htmlAttributes: new { @class = "", enctype="multipart/form-data" }))
        {
            @Html.AntiForgeryToken()


            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="row">

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.IdNumber, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.IdNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            

            <div class="row">

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.VoterCategoryModelId, "Voter Category", htmlAttributes: new { @class = "control-label " })
                    @Html.DropDownList("VoterCategoryModelId", voterCategories, null, htmlAttributes: new { @class = "form-control", required = true })
                    @Html.ValidationMessageFor(model => model.VoterCategoryModelId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })

                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.ProfilePictureUpload, htmlAttributes: new { @class = "control-label" })
                    <input type="file" name="ProfilePictureUpload" value="" class="form-control" accept="image/jpeg,image/png,image/jpg" required />
                    @Html.ValidationMessageFor(model => model.ProfilePictureUpload, "", new { @class = "text-danger" })
                </div>

            </div>



            <div class="form-group mb-2">
                <input type="submit" value="Create" class="btn btn-primary btn-sm" />
            </div>
        }


        <hr class="mt-3" />
        <div class="d-flex justify-content-start">
            <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-dark">
                <i class="fa fa-list-ol"></i>
                Back to List
            </a>
        </div>

    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



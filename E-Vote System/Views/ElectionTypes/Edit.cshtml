@model E_Vote_System.Models.ViewModels.ElectionTypesEditViewModel

@{
    ViewBag.Title = "Edit election type";
    ViewBag.PageTitle = "Edit election type";
    ViewBag.PageSubTitle = "Election Type Form";
}




@section BreadCrumbs{

    <li class="breadcrumb-item">
        @Html.ActionLink("Dashboard", "Dashboard", "Home")
    </li>
    <li class="breadcrumb-item">
        @Html.ActionLink("Election Types", "Index", "ElectionTypes")
    </li>
    <li class="breadcrumb-item">
        <a href="#">@ViewBag.Title</a>
    </li>
}

<div class="card">
    <div class="card-header">
        <h5>@ViewBag.Title</h5>

        <span>Election type form</span>
    </div>
    <div class="card-block table-border-style">


        @using (Html.BeginForm("Edit", "ElectionTypes", FormMethod.Post, htmlAttributes: new { @class = "form-inline" }))
        {
            @Html.AntiForgeryToken()

            @*<h4>ElectionTypes</h4>
            <hr />*@
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group mb-2">
                @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "mr-2" })
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.DateCreated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateCreated, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateCreated, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DateModified, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DateModified, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DateModified, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group mx-sm-3 mb-2">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "mr-2" })
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mb-2">
                <input type="submit" value="Update" class="btn btn-primary btn-sm" />
            </div>

        }



        <hr class="mt-3" />
        <div class="d-flex justify-content-start">
            <a href="@Url.Action("Index")" class="btn btn-sm btn-outline-dark">
                <i class="fa fa-list-ol"></i>
                Back to List
            </a>
        </div>

    </div>
</div>






@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
